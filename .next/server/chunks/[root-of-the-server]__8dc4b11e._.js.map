{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterbassett/Documents/Projects/mcma-kitchen-volunteers/src/app/api/update-attendance/route.js"],"sourcesContent":["import { google } from 'googleapis';\n\nexport async function POST(req) {\n  try {\n    const body = await req.json();\n    const { row, index, checked } = body;\n\n    const auth = new google.auth.JWT(\n      process.env.GOOGLE_CLIENT_EMAIL,\n      null,\n      process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\n      ['https://www.googleapis.com/auth/spreadsheets']\n    );\n\n    const sheets = google.sheets({ version: 'v4', auth });\n\n    const sheetId = process.env.GOOGLE_SHEET_ID;\n    const sheetName = '2025 Schedule of Events';\n\n    // ✅ Use the index directly — no +15 offset\n    const column = index;\n\n    // 🔐 Optional: Prevent overshooting past column W\n    if (column > 23) {\n      return new Response(JSON.stringify({ error: 'Column index exceeds sheet width' }), { status: 400 });\n    }\n\n    const cell = `${sheetName}!${columnToLetter(column)}${row}`;\n\n    await sheets.spreadsheets.values.update({\n      spreadsheetId: sheetId,\n      range: cell,\n      valueInputOption: 'RAW',\n      requestBody: {\n        values: [[checked ? '👍' : '']],\n      },\n    });\n\n    return new Response(JSON.stringify({ status: 'OK', cell }), { status: 200 });\n  } catch (err) {\n    console.error('❌ Google Sheets error:', err);\n    return new Response(JSON.stringify({ error: err.message, stack: err.stack }), {\n      status: 500,\n    });\n  }\n}\n\nfunction columnToLetter(col) {\n  let letter = '';\n  while (col > 0) {\n    const mod = (col - 1) % 26;\n    letter = String.fromCharCode(65 + mod) + letter;\n    col = Math.floor((col - mod) / 26);\n  }\n  return letter;\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;QAEhC,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,GAAG,CAC9B,QAAQ,GAAG,CAAC,mBAAmB,EAC/B,MACA,QAAQ,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ,OAC/C;YAAC;SAA+C;QAGlD,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,MAAM,UAAU,QAAQ,GAAG,CAAC,eAAe;QAC3C,MAAM,YAAY;QAElB,2CAA2C;QAC3C,MAAM,SAAS;QAEf,kDAAkD;QAClD,IAAI,SAAS,IAAI;YACf,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAmC,IAAI;gBAAE,QAAQ;YAAI;QACnG;QAEA,MAAM,OAAO,GAAG,UAAU,CAAC,EAAE,eAAe,UAAU,KAAK;QAE3D,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC,eAAe;YACf,OAAO;YACP,kBAAkB;YAClB,aAAa;gBACX,QAAQ;oBAAC;wBAAC,UAAU,OAAO;qBAAG;iBAAC;YACjC;QACF;QAEA,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAM;QAAK,IAAI;YAAE,QAAQ;QAAI;IAC5E,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO,IAAI,OAAO;YAAE,OAAO,IAAI,KAAK;QAAC,IAAI;YAC5E,QAAQ;QACV;IACF;AACF;AAEA,SAAS,eAAe,GAAG;IACzB,IAAI,SAAS;IACb,MAAO,MAAM,EAAG;QACd,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI;QACxB,SAAS,OAAO,YAAY,CAAC,KAAK,OAAO;QACzC,MAAM,KAAK,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI;IACjC;IACA,OAAO;AACT","debugId":null}}]
}