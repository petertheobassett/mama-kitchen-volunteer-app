{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterbassett/Documents/Projects/mcma-kitchen-volunteers/src/app/api/get-signup-events/route.js"],"sourcesContent":["import { google } from 'googleapis';\n\nexport async function GET() {\n  try {\n    const auth = new google.auth.JWT(\n      process.env.GOOGLE_CLIENT_EMAIL,\n      null,\n      process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\n      ['https://www.googleapis.com/auth/spreadsheets.readonly']\n    );\n\n    const sheets = google.sheets({ version: 'v4', auth });\n    const sheetId = process.env.GOOGLE_SHEET_ID;\n\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId: sheetId,\n      range: '2025 mcma events!A2:B100',\n    });\n\n    const rows = response.data.values || [];\n\n    const events = rows.map(([rawDate, name]) => {\n      // Attempt to parse custom-formatted date: \"Wed, 06-11-25\"\n      const parts = rawDate?.trim().split(', ')[1]?.split('-');\n      if (!parts || parts.length !== 3) return null;\n\n      const month = parseInt(parts[0], 10) - 1;\n      const day = parseInt(parts[1], 10);\n      const year = 2000 + parseInt(parts[2], 10);\n      const date = new Date(year, month, day);\n\n      return {\n        name,\n        date: date.toISOString(),\n        label: `${rawDate} – ${name}`,\n      };\n    }).filter(Boolean);\n\n    return new Response(JSON.stringify(events), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  } catch (err) {\n    console.error('❌ Error fetching events:', err);\n    return new Response(JSON.stringify({ error: err.message }), { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,GAAG,CAC9B,QAAQ,GAAG,CAAC,mBAAmB,EAC/B,MACA,QAAQ,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ,OAC/C;YAAC;SAAwD;QAG3D,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QACnD,MAAM,UAAU,QAAQ,GAAG,CAAC,eAAe;QAE3C,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QAEvC,MAAM,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,KAAK;YACtC,0DAA0D;YAC1D,MAAM,QAAQ,SAAS,OAAO,MAAM,KAAK,CAAC,EAAE,EAAE,MAAM;YACpD,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG,OAAO;YAEzC,MAAM,QAAQ,SAAS,KAAK,CAAC,EAAE,EAAE,MAAM;YACvC,MAAM,MAAM,SAAS,KAAK,CAAC,EAAE,EAAE;YAC/B,MAAM,OAAO,OAAO,SAAS,KAAK,CAAC,EAAE,EAAE;YACvC,MAAM,OAAO,IAAI,KAAK,MAAM,OAAO;YAEnC,OAAO;gBACL;gBACA,MAAM,KAAK,WAAW;gBACtB,OAAO,GAAG,QAAQ,GAAG,EAAE,MAAM;YAC/B;QACF,GAAG,MAAM,CAAC;QAEV,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,SAAS;YAC1C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO,IAAI,OAAO;QAAC,IAAI;YAAE,QAAQ;QAAI;IAC5E;AACF","debugId":null}}]
}