{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterbassett/Documents/Projects/mcma-kitchen-volunteers/src/app/api/get-signup-events/route.js"],"sourcesContent":["import { google } from 'googleapis';\n\nexport async function GET() {\n  try {\n    const auth = new google.auth.JWT(\n      process.env.GOOGLE_CLIENT_EMAIL,\n      null,\n      process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\n      ['https://www.googleapis.com/auth/spreadsheets.readonly']\n    );\n\n    const sheets = google.sheets({ version: 'v4', auth });\n    const sheetId = process.env.GOOGLE_SHEET_ID;\n\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId: sheetId,\n      range: '2025 mcma events!A2:B100',\n    });\n\n    const rows = response.data.values || [];\n    console.log('üìÑ Raw sheet rows:', rows);\n\n    const serialToDate = (val) => {\n      const msPerDay = 24 * 60 * 60 * 1000;\n      const baseDate = new Date(Date.UTC(1899, 11, 30));\n      return new Date(baseDate.getTime() + val * msPerDay);\n    };\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // normalize\n\n    const events = rows.map(([rawDate, name]) => {\n      if (!rawDate || !name) {\n        console.warn('‚ö†Ô∏è Skipping row with missing data:', rawDate, name);\n        return null;\n      }\n\n      let parsed;\n      if (!isNaN(rawDate)) {\n        // Serial number format\n        parsed = serialToDate(Number(rawDate));\n      } else {\n        // ISO string format\n        parsed = new Date(rawDate.trim());\n      }\n\n      if (isNaN(parsed)) {\n        console.warn('‚ö†Ô∏è Invalid date format:', rawDate);\n        return null;\n      }\n\n      // Normalize for comparison\n      const parsedCopy = new Date(parsed);\n      parsedCopy.setHours(0, 0, 0, 0);\n\n      if (parsedCopy < today) {\n        return null; // Exclude past events\n      }\n\n      return {\n        name: name.trim(),\n        date: parsed.toISOString().slice(0, 10), // \"yyyy-mm-dd\"\n        label: `${parsed.toDateString()} ‚Äì ${name.trim()}`,\n      };\n    }).filter(Boolean);\n\n    console.log('‚úÖ Parsed future events:', events);\n\n    return new Response(JSON.stringify(events), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  } catch (err) {\n    console.error('‚ùå Error fetching events:', err);\n    return new Response(JSON.stringify({ error: err.message }), { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,GAAG,CAC9B,QAAQ,GAAG,CAAC,mBAAmB,EAC/B,MACA,QAAQ,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ,OAC/C;YAAC;SAAwD;QAG3D,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QACnD,MAAM,UAAU,QAAQ,GAAG,CAAC,eAAe;QAE3C,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QACvC,QAAQ,GAAG,CAAC,sBAAsB;QAElC,MAAM,eAAe,CAAC;YACpB,MAAM,WAAW,KAAK,KAAK,KAAK;YAChC,MAAM,WAAW,IAAI,KAAK,KAAK,GAAG,CAAC,MAAM,IAAI;YAC7C,OAAO,IAAI,KAAK,SAAS,OAAO,KAAK,MAAM;QAC7C;QAEA,MAAM,QAAQ,IAAI;QAClB,MAAM,QAAQ,CAAC,GAAG,GAAG,GAAG,IAAI,YAAY;QAExC,MAAM,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,KAAK;YACtC,IAAI,CAAC,WAAW,CAAC,MAAM;gBACrB,QAAQ,IAAI,CAAC,sCAAsC,SAAS;gBAC5D,OAAO;YACT;YAEA,IAAI;YACJ,IAAI,CAAC,MAAM,UAAU;gBACnB,uBAAuB;gBACvB,SAAS,aAAa,OAAO;YAC/B,OAAO;gBACL,oBAAoB;gBACpB,SAAS,IAAI,KAAK,QAAQ,IAAI;YAChC;YAEA,IAAI,MAAM,SAAS;gBACjB,QAAQ,IAAI,CAAC,2BAA2B;gBACxC,OAAO;YACT;YAEA,2BAA2B;YAC3B,MAAM,aAAa,IAAI,KAAK;YAC5B,WAAW,QAAQ,CAAC,GAAG,GAAG,GAAG;YAE7B,IAAI,aAAa,OAAO;gBACtB,OAAO,MAAM,sBAAsB;YACrC;YAEA,OAAO;gBACL,MAAM,KAAK,IAAI;gBACf,MAAM,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;gBACpC,OAAO,GAAG,OAAO,YAAY,GAAG,GAAG,EAAE,KAAK,IAAI,IAAI;YACpD;QACF,GAAG,MAAM,CAAC;QAEV,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,SAAS;YAC1C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO,IAAI,OAAO;QAAC,IAAI;YAAE,QAAQ;QAAI;IAC5E;AACF","debugId":null}}]
}