{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterbassett/Documents/Projects/mcma-kitchen-volunteers/src/app/api/add-to-directory/route.js"],"sourcesContent":["import { google } from 'googleapis';\n\nexport async function POST(req) {\n  try {\n    const { name, phone, email } = await req.json();\n\n    if (!name || !phone || !email) {\n      return Response.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\n        private_key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n    });\n\n    const sheets = google.sheets({ version: 'v4', auth });\n    const spreadsheetId = process.env.GOOGLE_SHEET_ID;\n\n    const directoryRange = 'Volunteer Directory!A2:C1000';\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId,\n      range: directoryRange,\n    });\n\n    const existing = response.data.values || [];\n    const normalizedName = name.trim().toLowerCase();\n\n    const rowIndex = existing.findIndex(row => (row[0] || '').trim().toLowerCase() === normalizedName);\n    const sheetRow = rowIndex !== -1 ? rowIndex + 2 : existing.length + 2;\n\n    const updates = [\n      {\n        range: `Volunteer Directory!A${sheetRow}`,\n        values: [[name]],\n      },\n      {\n        range: `Volunteer Directory!B${sheetRow}`,\n        values: [[phone]],\n      },\n      {\n        range: `Volunteer Directory!C${sheetRow}`,\n        values: [[email]],\n      },\n    ];\n\n    const result = await sheets.spreadsheets.values.batchUpdate({\n      spreadsheetId,\n      requestBody: {\n        valueInputOption: 'USER_ENTERED',\n        data: updates,\n      },\n    });\n\n    return Response.json({\n      message: rowIndex !== -1 ? 'Updated existing volunteer' : 'Added new volunteer',\n      phoneUpdated: rowIndex !== -1,\n    });\n  } catch (err) {\n    console.error('‚ùå add-to-directory error:', err);\n    return Response.json({ error: err.message || 'Unknown error' }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAE7C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO;YAC7B,OAAO,SAAS,IAAI,CAAC;gBAAE,OAAO;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,cAAc,QAAQ,GAAG,CAAC,mBAAmB;gBAC7C,aAAa,QAAQ,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ;YAC9D;YACA,QAAQ;gBAAC;aAA+C;QAC1D;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QACnD,MAAM,gBAAgB,QAAQ,GAAG,CAAC,eAAe;QAEjD,MAAM,iBAAiB;QACvB,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD;YACA,OAAO;QACT;QAEA,MAAM,WAAW,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QAC3C,MAAM,iBAAiB,KAAK,IAAI,GAAG,WAAW;QAE9C,MAAM,WAAW,SAAS,SAAS,CAAC,CAAA,MAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,GAAG,WAAW,OAAO;QACnF,MAAM,WAAW,aAAa,CAAC,IAAI,WAAW,IAAI,SAAS,MAAM,GAAG;QAEpE,MAAM,UAAU;YACd;gBACE,OAAO,CAAC,qBAAqB,EAAE,UAAU;gBACzC,QAAQ;oBAAC;wBAAC;qBAAK;iBAAC;YAClB;YACA;gBACE,OAAO,CAAC,qBAAqB,EAAE,UAAU;gBACzC,QAAQ;oBAAC;wBAAC;qBAAM;iBAAC;YACnB;YACA;gBACE,OAAO,CAAC,qBAAqB,EAAE,UAAU;gBACzC,QAAQ;oBAAC;wBAAC;qBAAM;iBAAC;YACnB;SACD;QAED,MAAM,SAAS,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC;YAC1D;YACA,aAAa;gBACX,kBAAkB;gBAClB,MAAM;YACR;QACF;QAEA,OAAO,SAAS,IAAI,CAAC;YACnB,SAAS,aAAa,CAAC,IAAI,+BAA+B;YAC1D,cAAc,aAAa,CAAC;QAC9B;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO,IAAI,OAAO,IAAI;QAAgB,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF","debugId":null}}]
}