{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterbassett/Documents/Projects/mcma-kitchen-volunteers/src/app/api/add-to-directory/route.js"],"sourcesContent":["import { google } from 'googleapis';\n\nexport async function POST(req) {\n  const { name, phone, email } = await req.json();\n\n  if (!name || !phone || !email) {\n    return Response.json({ error: 'Missing name, phone, or email' }, { status: 400 });\n  }\n\n  const auth = new google.auth.GoogleAuth({\n    credentials: {\n      client_email: process.env.GOOGLE_CLIENT_EMAIL,\n      private_key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\n    },\n    scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n  });\n\n  const sheets = google.sheets({ version: 'v4', auth });\n  const spreadsheetId = process.env.GOOGLE_SHEET_ID;\n\n  const res = await sheets.spreadsheets.values.get({\n    spreadsheetId,\n    range: 'Volunteer Directory',\n  });\n\n  const rows = res.data.values || [];\n  const data = rows.slice(1); // Skip header\n  const headerOffset = 2;\n\n  const normalizedName = name.trim().toLowerCase();\n  const matchedRowIndex = data.findIndex(row => row[0]?.trim().toLowerCase() === normalizedName);\n  const rowNumber = matchedRowIndex + headerOffset;\n\n  if (matchedRowIndex !== -1) {\n    const row = data[matchedRowIndex];\n    const currentPhone = row[1]?.trim() || '';\n    const currentEmail = row[2]?.trim() || '';\n\n    let phoneUpdated = false;\n    let emailUpdated = false;\n\n    if (currentPhone !== phone.trim()) {\n      await sheets.spreadsheets.values.update({\n        spreadsheetId,\n        range: `Volunteer Directory!B${rowNumber}`,\n        valueInputOption: 'USER_ENTERED',\n        requestBody: { values: [[phone.trim()]] },\n      });\n      phoneUpdated = true;\n    }\n\n    if (!currentEmail || currentEmail !== email.trim()) {\n      await sheets.spreadsheets.values.update({\n        spreadsheetId,\n        range: `Volunteer Directory!C${rowNumber}`,\n        valueInputOption: 'USER_ENTERED',\n        requestBody: { values: [[email.trim()]] },\n      });\n      emailUpdated = true;\n    }\n\n    return Response.json({\n      message: phoneUpdated || emailUpdated\n        ? 'Directory updated'\n        : 'Already in directory',\n      duplicate: true,\n      phoneUpdated,\n      emailUpdated,\n    });\n  }\n\n  // Append new row\n  const newRow = [name.trim(), phone.trim(), email.trim(), '', '', ''];\n  await sheets.spreadsheets.values.append({\n    spreadsheetId,\n    range: 'Volunteer Directory',\n    valueInputOption: 'USER_ENTERED',\n    requestBody: {\n      values: [newRow],\n    },\n  });\n\n  return Response.json({\n    message: 'Added to directory',\n    duplicate: false,\n    phoneUpdated: false,\n    emailUpdated: false,\n  });\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;IAE7C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO;QAC7B,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO;QAAgC,GAAG;YAAE,QAAQ;QAAI;IACjF;IAEA,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACtC,aAAa;YACX,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC7C,aAAa,QAAQ,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ;QAC9D;QACA,QAAQ;YAAC;SAA+C;IAC1D;IAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;QAAE,SAAS;QAAM;IAAK;IACnD,MAAM,gBAAgB,QAAQ,GAAG,CAAC,eAAe;IAEjD,MAAM,MAAM,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;QAC/C;QACA,OAAO;IACT;IAEA,MAAM,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE;IAClC,MAAM,OAAO,KAAK,KAAK,CAAC,IAAI,cAAc;IAC1C,MAAM,eAAe;IAErB,MAAM,iBAAiB,KAAK,IAAI,GAAG,WAAW;IAC9C,MAAM,kBAAkB,KAAK,SAAS,CAAC,CAAA,MAAO,GAAG,CAAC,EAAE,EAAE,OAAO,kBAAkB;IAC/E,MAAM,YAAY,kBAAkB;IAEpC,IAAI,oBAAoB,CAAC,GAAG;QAC1B,MAAM,MAAM,IAAI,CAAC,gBAAgB;QACjC,MAAM,eAAe,GAAG,CAAC,EAAE,EAAE,UAAU;QACvC,MAAM,eAAe,GAAG,CAAC,EAAE,EAAE,UAAU;QAEvC,IAAI,eAAe;QACnB,IAAI,eAAe;QAEnB,IAAI,iBAAiB,MAAM,IAAI,IAAI;YACjC,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;gBACtC;gBACA,OAAO,CAAC,qBAAqB,EAAE,WAAW;gBAC1C,kBAAkB;gBAClB,aAAa;oBAAE,QAAQ;wBAAC;4BAAC,MAAM,IAAI;yBAAG;qBAAC;gBAAC;YAC1C;YACA,eAAe;QACjB;QAEA,IAAI,CAAC,gBAAgB,iBAAiB,MAAM,IAAI,IAAI;YAClD,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;gBACtC;gBACA,OAAO,CAAC,qBAAqB,EAAE,WAAW;gBAC1C,kBAAkB;gBAClB,aAAa;oBAAE,QAAQ;wBAAC;4BAAC,MAAM,IAAI;yBAAG;qBAAC;gBAAC;YAC1C;YACA,eAAe;QACjB;QAEA,OAAO,SAAS,IAAI,CAAC;YACnB,SAAS,gBAAgB,eACrB,sBACA;YACJ,WAAW;YACX;YACA;QACF;IACF;IAEA,iBAAiB;IACjB,MAAM,SAAS;QAAC,KAAK,IAAI;QAAI,MAAM,IAAI;QAAI,MAAM,IAAI;QAAI;QAAI;QAAI;KAAG;IACpE,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;QACtC;QACA,OAAO;QACP,kBAAkB;QAClB,aAAa;YACX,QAAQ;gBAAC;aAAO;QAClB;IACF;IAEA,OAAO,SAAS,IAAI,CAAC;QACnB,SAAS;QACT,WAAW;QACX,cAAc;QACd,cAAc;IAChB;AACF","debugId":null}}]
}